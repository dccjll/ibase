<manifest xmlns:tools="http://schemas.android.com/tools"
    package="com.dcc.ibase"
    xmlns:android="http://schemas.android.com/apk/res/android">

    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
    <uses-permission android:name="android.permission.USE_FINGERPRINT" />


    <!-- 个推SDK权限配置开始
        需要在工程的根build.gradle文件作如下配置
        allprojects {
            repositories {
                maven {
                    url "http://mvn.gt.igexin.com/nexus/content/repositories/releases/"
                }
            }
        }
        然后在模块的build.gralde文件导入个推的sdk，大致如下：
        api 'com.getui:sdk:2.12.5.0'
    -->
    <uses-permission android:name="android.permission.INTERNET"/>
    <uses-permission android:name="android.permission.READ_PHONE_STATE"/>
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE"/>
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE"/>
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
    <uses-permission android:name="android.permission.VIBRATE"/>
    <uses-permission android:name="android.permission.GET_TASKS"/>
    <!-- 支持iBeancon 需要蓝牙权限 -->
    <uses-permission android:name="android.permission.BLUETOOTH"/>
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN"/>
    <!-- 支持个推3.0 电子围栏功能 -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>
    <!-- 浮动通知权限 -->
    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
    <uses-permission android:name="getui.permission.GetuiService.${applicationId}"/>

    <permission
        android:name="getui.permission.GetuiService.${applicationId}"
        android:protectionLevel="normal" />
    <!-- 个推SDK权限配置结束 -->

    <application
        android:usesCleartextTraffic="true"
        tools:targetApi="m">

        <!-- 个推配置 -->
        <meta-data
            android:name="PUSH_APPID"
            android:value="${GETUI_APP_ID}"/>
        <meta-data
            android:name="PUSH_APPKEY"
            android:value="${GETUI_APP_KEY}"/>
        <meta-data
            android:name="PUSH_APPSECRET"
            android:value="${GETUI_APP_SECRET}"/>

        <receiver
            android:name="com.igexin.sdk.PushReceiver">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED"/>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE"/>
                <action android:name="android.intent.action.USER_PRESENT"/>
                <action android:name="com.igexin.sdk.action.refreshls"/>
                <action android:name="android.intent.action.MEDIA_MOUNTED"/>
                <action android:name="android.intent.action.ACTION_POWER_CONNECTED"/>
                <action android:name="android.intent.action.ACTION_POWER_DISCONNECTED"/>
            </intent-filter>
        </receiver>

        <activity
            android:name="com.igexin.sdk.PushActivity"
            android:excludeFromRecents="true"
            android:exported="false"
            android:process=":pushservice"
            android:taskAffinity="com.igexin.sdk.PushActivityTask"
            android:theme="@android:style/Theme.Translucent.NoTitleBar"/>

        <activity
            android:name="com.igexin.sdk.GActivity"
            android:excludeFromRecents="true"
            android:exported="true"
            android:process=":pushservice"
            android:taskAffinity="com.igexin.sdk.PushActivityTask"
            android:theme="@android:style/Theme.Translucent.NoTitleBar"/>

        <!-- 配置SDK核心服务 -->
        <service
            android:name="com.igexin.sdk.PushService"
            android:exported="true"
            android:label="NotificationCenter"
            android:process=":pushservice">
            <intent-filter>
                <action android:name="com.igexin.sdk.action.service.message"/>
            </intent-filter>
        </service>

        <!-- 用户自定义服务继承自GTIntentService,作为SDK与APP桥梁服务,用来接收各种消息和命令回复-->
        <service android:name="com.dcc.ibase.third.igexin.IGTIntentService"/>

        <!-- 用户自定义服务名 -->
        <service
            android:name="com.dcc.ibase.third.igexin.GTPushService"
            android:exported="true"
            android:label="PushService"
            android:process=":pushservice">
        </service>

        <!-- glide默认缓存配置
             如要自定义配置，覆盖GlideCache类，覆写其中的两个配置方法即可-->
        <meta-data android:name="com.dcc.ibase.view.glide.GlideCache"
            android:value="GlideModule"/>

    </application>
</manifest>
